You are tasked with extracting key information from a scientific paper PDF and generating a JSON structure describing a PowerPoint presentation. The level of simplification is {{SIMPLIFICATION_LEVEL}} (1 = Academic (complex) , 10 = Patient (simple) ).

We have the following PowerPoint slide layouts available. Here is their JSON representation for your reference:
{{LAYOUT_INFO_JSON}}

You will receive the PDF as a base64-encoded document. Please:
1. Read the PDF and summarize the key information at the specified simplification level.
2. Decide how many slides to create and which "layout_name" to use for each slide.
3. For each slide, specify a "layout_name" and a "placeholders" object. In that object:
   - Indicate which "placeholder_idx" to fill (matching the layout info above).
   - Provide content as either:
     - A well-written paragraph (use this for slides meant to deliver a narrative, such as the introduction and conclusion â€” these paragraphs should be at least twice as long as the standard text), or
     - Bullet points (via "bullets": ["Point 1", "Point 2"]) with accompanying short text.

Important Guidelines:
- Limit bullet point slides to one or two per presentation for a narrative and engaging tone
- Make titles short and concise even on academic settings , as we dont have a lot of space on that page
- Aim for at least 12 slides minimum (unless it's a tiny PDF)
- Include narrative-style introduction and conclusion slides with extended paragraphs
- At simplification score of 10, content should be very simple and accessible
- Ensure that the presentation includes at least one graph
- Please make sure all page titles are short , never more than one line 
- Add a final slide with source paper details (paper name, authors, DOI) and mention "Generated by PEEL"
- Use EVERY available image exactly ONCE

Chart Types Available:

1. Donut Chart:
{
  "placeholder_idx": 1,
  "chart_type": "donut",
  "chart_data": {
    "title": "Gender Distribution",
    "data": [
      {"category": "Female", "value": 60},
      {"category": "Male", "value": 40}
    ]
  }
}
```

2. Bar Chart:
{
  "placeholder_idx": 1,
  "chart_type": "comparison_bars",
  "chart_data": {
    "title": "Treatment Response",
    "labels": ["Group A", "Group B", "Group C"],
    "values": [75, 45, 62],
    "x_axis": "Treatment Groups",
    "y_axis": "Response Rate (%)"
  }
}

3. Trend Line:
{
  "placeholder_idx": 1,
  "chart_type": "trend_line",
  "chart_data": {
    "title": "Monthly Progress",
    "dates": ["Jan", "Feb", "Mar", "Apr"],
    "values": [10, 20, 15, 25],
    "x_axis": "Month",
    "y_axis": "Progress Score"
  }
}
```

For Images:
{
  "placeholders": {
    "10": { "image_key": "your_image_filename.png" }
  }
}
```
(Ensure "placeholder_idx" matches an actual image placeholder index from the chosen layout)

Available images that MUST all be used exactly once: {{AVAILABLE_IMAGES}}

Return valid JSON in a top-level object:
{
  "slides": [ ... ]
}
```

Where each slide has:
{
  "layout_name": "<layout name>",
  "placeholders": {
    "<placeholder_idx>": "String or object describing text/bullets/images/charts"
  }
}


Output Format:
Use this exact structure:
<scratchpad> [Your reasoning and notes go here.] </scratchpad>
<json_output> { "slides": [ ... ] } </json_output>

<scratchpad> block: Provide your internal reasoning briefly (if needed).
<json_output> block: Only valid JSON describing the slides.
Ensure the JSON is valid and does not contain any extraneous text.
